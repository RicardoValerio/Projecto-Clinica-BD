 Na realização do trabalho os alunos têm de conceber e implementar uma base de dados com uma complexidade mínima de seis tabelas e usar pelo menos:

         ✔ uma vez Subconsultas e @done (13-11-21 20:26)
         ✔ Vistas @done (13-11-28 16:33)
===========================================

CREATE VIEW view_consultas_marcadas AS 
SELECT  'consultas_marcadas.id', 
    'consultas_marcadas.datetime_confirmacao',
    'consultas_marcadas.data_consulta',
    'consultas_marcadas.hora_consulta',
    'consultas_marcadas.medicos_id',
    'especialidades.especialidade',
    'horarios.descricao_horario',
    'consultas_marcadas.utentes_email'
FROM consultas_marcadas, 
   medicos, 
     especialidades,
   horarios
WHERE 'medicos.id' = 'consultas_marcadas.medicos_id'
  AND 'medicos.horarios_id' = 'horarios.id'
  AND 'medicos.especialidades_id' = 'especialidades.id'
ORDER BY str_to_date(data_consulta, '%m/%d/%Y') ASC, 'consultas_marcadas.hora_consulta' ASC;

=======================================

CREATE VIEW view_historico_consultas_realizadas AS 
SELECT 
    'consultas_realizadas.id',
    'consultas_realizadas.datetime_consulta_realizada',
    'consultas_realizadas.valor_consulta',
    'consultas_realizadas.diagnostico',
    'consultas_realizadas.prescricao',
    'consultas_realizadas.medicos_id',
    'especialidades.especialidade',
    'horarios.descricao_horario',
    'consultas_realizadas.utentes_email'
FROM consultas_realizadas,
     medicos,
     especialidades,
     horarios
WHERE 'medicos.id' = 'consultas_realizadas.medicos_id'
AND 'horarios.id' = 'medicos.horarios_id'
AND 'especialidades.id' = 'medicos.especialidades_id'
ORDER BY datetime_consulta_realizada DESC;

=======================================

CREATE VIEW view_emails_web_marketing
AS SELECT 'email' FROM 'utentes'
UNION
SELECT 'email' FROM 'questoes_online'
ORDER BY 'email';

=======================================

CREATE VIEW view_consultas_do_mes_currente AS
SELECT * FROM 'consultas_marcadas' 
WHERE 'data_consulta' 
BETWEEN
    DATE_FORMAT(DATE(NOW()), "%m/%d/%Y") 
  AND DATE_FORMAT(LAST_DAY(now()), "%m/%d/%Y") 
ORDER BY 'data_consulta' ASC, 'hora_consulta' ASC;


=======================================

CREATE VIEW view_telemoveis_96 AS 
SELECT * FROM 'utentes' WHERE 'contacto_tel' LIKE '96%';

=======================================

CREATE VIEW view_medicos_num_consultas
AS SELECT 'medicos.primeiro_nome', 
      'medicos.ultimo_nome', 
      COUNT(consultas_marcadas.id) AS 'Nº de Consultas Marcadas' 
FROM 'medicos', 'consultas_marcadas' 
WHERE 'consultas_marcadas.medicos_id' = 'medicos.id' 
GROUP BY 'consultas_marcadas.medicos_id';

=======================================

CREATE VIEW view_nome_medicos_consultas_marcadas
AS SELECT DISTINCT 'medicos.primeiro_nome' , 
           'medicos.ultimo_nome' 
FROM 'medicos', 'consultas_marcadas' 
WHERE 'consultas_marcadas.medicos_id' = 'medicos.id';

=======================================


e ainda os comandos, cláusulas, operadores e funções seguintes:
 
Comandos:  
 ✔ CREATE @done (13-11-21 20:23)
 ✔ USE (está implícito já) @done (13-11-21 20:23)
 ✔ DROP @done (13-11-21 20:23)
 ✔ INSERT @done (13-11-21 20:23)
 ✔ UPDATE @done (13-11-21 20:23)
 ✔ DELETE @done (13-11-21 20:23)
 ✔ SELECT @done (13-11-21 20:23)
 
A meio do projecto criamos um campo adicional na tabela medicos. 
 ✔ ALTER @done (13-11-26 17:37)
                      
                      ALTER TABLE `projecto_clinica`.`medicos` 
                      ADD COLUMN `salario_mensal` DECIMAL(7,2) NOT NULL AFTER `horarios_id`;

✔ JOIN @done (13-11-28 16:15)


Cláusulas:  
 ✔ FROM @done (13-11-21 20:25)
 ✔ WHERE @done (13-11-21 20:25)
 ✔ ON DELETE CASCADE ou ON UPDATE CASCADE @done (13-11-26 17:40)
 ✔ ORDER BY @done (13-11-21 20:25)

 ✔ GROUP BY @done (13-12-07 00:46)
   
// retorna os nomes do médicos médicos e o número de consultas marcadas que cada um possui:

   select medicos.primeiro_nome , medicos.ultimo_nome, count(consultas_marcadas.id) as 'Nº de Consultas Marcadas' from medicos, consultas_marcadas where consultas_marcadas.medicos_id = medicos.id group by consultas_marcadas.medicos_id;
  

 ✔ DISTINCT @done (13-12-07 00:41)

// retorna de forma distincta os nomes dos médicos que estão com consultas marcadas:

   select distinct medicos.primeiro_nome , medicos.ultimo_nome from medicos, consultas_marcadas where consultas_marcadas.medicos_id = medicos.id;

 ✔ BETWEEN @done (13-12-02 22:22)

Operadores: 
 ✔ AND @done (13-11-21 20:25)
 ✔ OR @done (13-11-21 20:25)
 ✔ NOT @done (13-11-21 20:25)
 ✔ IN @done (13-11-21 20:25)
 ✔ LIKE @done (13-12-02 22:32)
 ✔ UNION @done (13-12-02 21:31)

Funções: 
 ✔ COUNT @done (13-11-21 20:25)
 ✔ SUM @done (13-11-26 17:33)
 ✔ AVG @done (13-11-26 17:33)
 ✔ MAX @done (13-11-26 17:33)
 ✔ MIN @done (13-11-26 17:33)


